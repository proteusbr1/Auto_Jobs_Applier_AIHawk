services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=production
    restart: always
    depends_on:
      - db
      - redis
    command: bash -c "gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 run:app"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME}
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
      - resume_uploads:/app/app/static/uploads/resumes
    ports:
      - "5000:5000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=production
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
      - resume_uploads:/app/app/static/uploads/resumes
    command: celery -A run_celery:celery worker --loglevel=info

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=production
    restart: always
    depends_on:
      - web
      - redis
      - db
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
      - resume_uploads:/app/app/static/uploads/resumes
    command: celery -A run_celery:celery beat --loglevel=info

  nginx:
    image: nginx:1.21-alpine
    restart: always
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/app/static
      - resume_uploads:/app/app/static/uploads/resumes
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  resume_uploads:

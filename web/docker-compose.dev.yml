services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    restart: no
    depends_on:
      - db
      - redis
    command: flask run --host=0.0.0.0 --port=5000
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=dev_secret_key_for_development_only
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-adminpassword}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME:-Admin}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME:-User}
    volumes:
      - ./:/app
    ports:
      - "5000:5000"

  db:
    image: postgres:14-alpine
    restart: no
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-aihawk_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: no
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    restart: no
    command: celery -A app.celery worker --loglevel=debug
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db/${POSTGRES_DB:-aihawk_db}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    restart: no
    command: celery -A app.celery beat --loglevel=debug
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db/${POSTGRES_DB:-aihawk_db}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db

  pgadmin:
    image: dpage/pgadmin4
    restart: no
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aihawk.com
      - PGADMIN_DEFAULT_PASSWORD=Adm1nP4ssw0rd!
    ports:
      - "5050:80"
    depends_on:
      - db

  nginx:
    image: nginx:1.21-alpine
    restart: no
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/app.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/app/static
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

volumes:
  postgres_data:
  redis_data:
  resume_uploads:

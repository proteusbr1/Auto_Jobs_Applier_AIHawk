services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    volumes:
      - ./:/app
    ports:
      - "5000:5000"
    command: flask run --host=0.0.0.0 --port=5000
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      - web
      - redis
      - db
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    command: celery -A app.celery beat --loglevel=info
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      - web
      - redis
      - db
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aihawk.com
      - PGADMIN_DEFAULT_PASSWORD=Adm1nP4ssw0rd!
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped

  nginx:
    image: nginx:1.21-alpine
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/app.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/app/static
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

volumes:
  postgres_data:
